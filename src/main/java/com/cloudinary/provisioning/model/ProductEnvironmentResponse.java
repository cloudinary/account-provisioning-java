/*
 * Cloudinary Provisioning API
 * Accounts with provisioning API access can create and manage their **product environments**, **users** and **user groups** using the RESTful Provisioning API.   Provisioning API access is available [upon request](https://cloudinary.com/contact?plan=enterprise) for accounts on an [Enterprise plan](https://cloudinary.com/pricing#pricing-enterprise). 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@cloudinary.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudinary.provisioning.model;

import java.util.Objects;
import java.util.Arrays;
import com.cloudinary.provisioning.model.AccessKeyResponse;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.cloudinary.provisioning.JSON;

/**
 * ProductEnvironmentResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-14T13:08:19.875333+02:00[Asia/Jerusalem]")
public class ProductEnvironmentResponse {
  public static final String SERIALIZED_NAME_CLOUD_NAME = "cloud_name";
  @SerializedName(SERIALIZED_NAME_CLOUD_NAME)
  private String cloudName;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_API_ACCESS_KEYS = "api_access_keys";
  @SerializedName(SERIALIZED_NAME_API_ACCESS_KEYS)
  private List<AccessKeyResponse> apiAccessKeys = null;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public ProductEnvironmentResponse() { 
  }

  public ProductEnvironmentResponse cloudName(String cloudName) {
    
    this.cloudName = cloudName;
    return this;
  }

   /**
   * Get cloudName
   * @return cloudName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCloudName() {
    return cloudName;
  }


  public void setCloudName(String cloudName) {
    this.cloudName = cloudName;
  }


  public ProductEnvironmentResponse name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ProductEnvironmentResponse enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ProductEnvironmentResponse id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ProductEnvironmentResponse apiAccessKeys(List<AccessKeyResponse> apiAccessKeys) {
    
    this.apiAccessKeys = apiAccessKeys;
    return this;
  }

  public ProductEnvironmentResponse addApiAccessKeysItem(AccessKeyResponse apiAccessKeysItem) {
    if (this.apiAccessKeys == null) {
      this.apiAccessKeys = new ArrayList<>();
    }
    this.apiAccessKeys.add(apiAccessKeysItem);
    return this;
  }

   /**
   * Get apiAccessKeys
   * @return apiAccessKeys
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AccessKeyResponse> getApiAccessKeys() {
    return apiAccessKeys;
  }


  public void setApiAccessKeys(List<AccessKeyResponse> apiAccessKeys) {
    this.apiAccessKeys = apiAccessKeys;
  }


  public ProductEnvironmentResponse createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductEnvironmentResponse productEnvironmentResponse = (ProductEnvironmentResponse) o;
    return Objects.equals(this.cloudName, productEnvironmentResponse.cloudName) &&
        Objects.equals(this.name, productEnvironmentResponse.name) &&
        Objects.equals(this.enabled, productEnvironmentResponse.enabled) &&
        Objects.equals(this.id, productEnvironmentResponse.id) &&
        Objects.equals(this.apiAccessKeys, productEnvironmentResponse.apiAccessKeys) &&
        Objects.equals(this.createdAt, productEnvironmentResponse.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudName, name, enabled, id, apiAccessKeys, createdAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductEnvironmentResponse {\n");
    sb.append("    cloudName: ").append(toIndentedString(cloudName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    apiAccessKeys: ").append(toIndentedString(apiAccessKeys)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cloud_name");
    openapiFields.add("name");
    openapiFields.add("enabled");
    openapiFields.add("id");
    openapiFields.add("api_access_keys");
    openapiFields.add("created_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ProductEnvironmentResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ProductEnvironmentResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductEnvironmentResponse is not found in the empty JSON string", ProductEnvironmentResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      //for (Entry<String, JsonElement> entry : entries) {
        //if (!ProductEnvironmentResponse.openapiFields.contains(entry.getKey())) {
          //throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductEnvironmentResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        //}
      //}
      if (jsonObj.get("cloud_name") != null && !jsonObj.get("cloud_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cloud_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cloud_name").toString()));
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      JsonArray jsonArrayapiAccessKeys = jsonObj.getAsJsonArray("api_access_keys");
      if (jsonArrayapiAccessKeys != null) {
        // ensure the json data is an array
        if (!jsonObj.get("api_access_keys").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `api_access_keys` to be an array in the JSON string but got `%s`", jsonObj.get("api_access_keys").toString()));
        }

        // validate the optional field `api_access_keys` (array)
        for (int i = 0; i < jsonArrayapiAccessKeys.size(); i++) {
          AccessKeyResponse.validateJsonObject(jsonArrayapiAccessKeys.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductEnvironmentResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductEnvironmentResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductEnvironmentResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductEnvironmentResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductEnvironmentResponse>() {
           @Override
           public void write(JsonWriter out, ProductEnvironmentResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductEnvironmentResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ProductEnvironmentResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ProductEnvironmentResponse
  * @throws IOException if the JSON string is invalid with respect to ProductEnvironmentResponse
  */
  public static ProductEnvironmentResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductEnvironmentResponse.class);
  }

 /**
  * Convert an instance of ProductEnvironmentResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

