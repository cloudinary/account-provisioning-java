/*
 * Cloudinary Provisioning API
 * Accounts with provisioning API access can create and manage their **product environments**, **users** and **user groups** using the RESTful Provisioning API.   Provisioning API access is available [upon request](https://cloudinary.com/contact?plan=enterprise) for accounts on an [Enterprise plan](https://cloudinary.com/pricing#pricing-enterprise). 
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@cloudinary.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cloudinary.provisioning.api;

import com.cloudinary.provisioning.ApiException;
import com.cloudinary.provisioning.model.MessageResponse;
import com.cloudinary.provisioning.model.ProductEnvironmentRequest;
import com.cloudinary.provisioning.model.ProductEnvironmentResponse;
import com.cloudinary.provisioning.model.ProductEnvironmentsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EnvironmentsApi
 */
@Disabled
public class EnvironmentsApiTest {

    private final EnvironmentsApi api = new EnvironmentsApi();

    /**
     * Create product environment
     *
     * Create a new product environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProductEnvironmentTest() throws ApiException {
        ProductEnvironmentRequest productEnvironmentRequest = null;
        ProductEnvironmentResponse response = api.createProductEnvironment(productEnvironmentRequest);
        // TODO: test validations
    }

    /**
     * Delete product environment
     *
     * Delete a specific product environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProductEnvironmentTest() throws ApiException {
        String subAccountId = null;
        MessageResponse response = api.deleteProductEnvironment(subAccountId);
        // TODO: test validations
    }

    /**
     * Get product environment
     *
     * Retrieve a specific product environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductEnvironmentTest() throws ApiException {
        String subAccountId = null;
        ProductEnvironmentResponse response = api.getProductEnvironment(subAccountId);
        // TODO: test validations
    }

    /**
     * Get product environments
     *
     * Retrieve an array of product environments.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductEnvironmentsTest() throws ApiException {
        Boolean enabled = null;
        List<String> ids = null;
        String prefix = null;
        ProductEnvironmentsResponse response = api.getProductEnvironments(enabled, ids, prefix);
        // TODO: test validations
    }

    /**
     * Update product environment
     *
     * Update the details of a product environment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProductEnvironmentTest() throws ApiException {
        String subAccountId = null;
        ProductEnvironmentRequest productEnvironmentRequest = null;
        ProductEnvironmentResponse response = api.updateProductEnvironment(subAccountId, productEnvironmentRequest);
        // TODO: test validations
    }

}
